
 */

/**
 *
 * @author yaser
 */
public class StringUtils {
    public static boolean included(String word, String searched){
        word = word.toUpperCase();
        searched = searched.toUpperCase();
        return word.contains(searched);
    }
}




/**
 *
 * @author yaser
 */
public class Book {
    private String title;
    private String publisher; 
    private int year;
    
    public Book(String title, String publisher, int year){
        this.title = title;
        this.publisher = publisher;
        this.year = year;
    }
    
    public String title(){
        return this.title;
    }
    
     public String publisher(){
        return this.publisher;
    }
     
    public int year(){
        return this.year;
    }
      
    public String toString(){
        return this.title + " " + this.publisher + " " + this.year;
    }
}




/**
 *
 * @author yaser
 */
public class BinarySearch {
    public static int search(int[] array, int first, int last, int searchedValue){
        if (last>=first){  
            int mid = first+(last - first)/2;  
            
            if (array[mid] == searchedValue){  
                return mid;  
            }  
            
            if (array[mid] > searchedValue){  
              return search(array, first, mid-1, searchedValue);//search in left subarray  
            }else{  
              return search(array, mid+1, last, searchedValue);//search in right subarray  
            }  
        }  
        return -1;  
    }
    
    
   
}




import java.util.ArrayList;

/**
 *
 * @author yaser
 */
public class Library {
    private static ArrayList<Book> library = new ArrayList<Book>();
    
    public void addBook(Book newBook){
        library.add(newBook);
    }
    
    public void printBooks(){
        for(Book b : library){
            System.out.println(b);
        }
    }
    
    public static ArrayList<Book> searchByTitle(String title){
        ArrayList<Book> found = new ArrayList<Book>();
        for(Book b : library){
          /*  if(b.title().equals(title)){
                found.add(b);
            }*/
          
            if(StringUtils.included(b.title(), title)){
                found.add(b);
            }
        }
        
        return found;
        
    }

}



import java.util.Random;

/**
 *
 * @author yaser
 */
public class NightSky {
    private double density;
    private int width;
    private int height;
    private Random r = new Random();
    private int numberOfStars = 0;
    
    public NightSky(double density){
        this.density = density;
        this.width = 20;
        this.height = 10;
    }
    
    public NightSky(int width, int height){
        this.density = 0.1;
        this.width = width;
        this.height = height;
    }
    
    public NightSky(double density, int width, int height){
        this.density = density;
        this.width = width;
        this.height = height;
    }
    
    public void printLine(){ 
        for(int i = 0; i<this.width; i++){
            long result = Math.round(Math.random());
            if(result == 1){
                System.out.print("*");
                this.numberOfStars++;
            }else{
                System.out.print(" ");
            }  
        }
    }
    
    public void print(){
        for(int i = 0; i<this.height; i++){
            printLine();
            System.out.println("");
        }
    }
    
    public int starsInLastPrint(){
        return this.numberOfStars;
    }
    
    
}


  
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;

/**
 * @author yaser

 */
public class Week6 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        //int[] values  = {6, 5, 7, 11};
        /*System.out.println("Smallest is " + smallest(values));
        System.out.println("Smallest is at index " + indexOfSmallest(values));
        System.out.println("The smallest is at index " + indexOfTheSmallestStartingFrom(values, 2));*/
        
       /* System.out.println("Before Swap: " + Arrays.toString(values));
        swap(values, 1, 0);
        System.out.println("After 1. Swap: " + Arrays.toString(values));
        swap(values, 0, 3);
        System.out.println("After 2. Swap: " + Arrays.toString(values));*/
        
       /*
        #sort array
        int[] sort_array = {1, 6,4,8,3,2};
        Arrays.sort(sort_array);
        System.out.println(Arrays.toString(sort_array));*/
       
        /*int[] arrayN = { -3, 2, 3, 4, 7, 8, 12 };
       
        Scanner reader = new Scanner(System.in);

        System.out.print("Values of the array: " + Arrays.toString(arrayN));
        System.out.println();
        System.out.print("Enter searched number: ");
        String searchedValue = reader.nextLine();
        System.out.println();
        int result = BinarySearch.search(arrayN,  0, arrayN.length, Integer.parseInt(searchedValue));
       
        if(result == -1){
            System.out.println("Value : " + searchedValue + " is not in the array");
        }else{
            System.out.println("Value : " + searchedValue + " is in the array");
        }*/
        
       /* int[] array = {5, 1, 3, 4, 2};
        printElegantly(array);*/
      
      /*NightSky sky = new NightSky(0.1, 40, 10);
      sky.print();
      System.out.println("Number of stars: " + sky.starsInLastPrint());*/
     
        Book cheese = new Book("Cheese Problems Solved", "Woodhead Publishing", 2007);
        System.out.println(cheese.title());
        System.out.println(cheese.publisher());
        System.out.println(cheese.year());
        
        System.out.println(cheese);
        
        Book nh1 = new Book("NHL Hockey", "Stanley Cup", 1952);
        
        Library l = new Library();
        l.addBook(cheese);
        l.addBook(nh1);
        l.addBook(new Book("Battle Axes", "Tom A. Hawk", 1851));
        l.addBook(new Book("Cheese Man", "Penguin Group", 1992));
        
        l.printBooks();
        
        ArrayList<Book> result = Library.searchByTitle("CHEESE");
        System.out.println("========");
        for(Book b : result){
            System.out.println(b);
        }
    }
    
    public static int smallest(int[] array){
        int smallest = array[0]; 
        for(int i = 1; i < array.length; i++){
            if(array[i] < smallest){
                smallest = array[i];
            }
        }
        return smallest;
    }
    
    public static int indexOfSmallest(int[] array){
        int smallest = array[0]; 
        int index = 0; 
        for(int i = 1; i < array.length; i++){
            if(array[i] < smallest){
                index = i; 
                smallest = array[i];
            }
        }
        return index;
    }
    
    public static int indexOfTheSmallestStartingFrom(int[] array, int index){
        int smallest = array[index];
        int indexOfSmallest = index; 
        
        for(int i = index+1; i < array.length; i++){
            if(array[i] < smallest){
                indexOfSmallest = i; 
                smallest = array[i];
            }
        }
        return indexOfSmallest;
    }
    
    public static void swap(int[] array, int index1, int index2){
        int temp = array[index1];
        array[index1] = array[index2];
        array[index2] = temp; 
        
    }
    
    public static void printElegantly(int[]array) {
        for (int i=0; i < array.length ; i++ ) {
            if (i==array.length-1) {
                System.out.println(array[i]);
            } else {
                System.out.print(array[i]+", ");
            }
        }
    }
    
}
 
   


