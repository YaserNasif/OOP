
import java.util.HashMap;

/**
 *
 * @author yaser
 */
public class PromissoryNote {
    private HashMap<String, Double> loans;
    
    public PromissoryNote(){
        loans = new HashMap<String, Double>();
    }
    
    public void setLoan(String toWhom, double value){
        loans.put(toWhom, value);
    }
    
     public double howMuchIsDebt(String whose){
         if(loans.containsKey(whose)){
             return loans.get(whose);
         }
         
         return 0;
     }
}



import java.util.ArrayList;
import java.util.HashMap;

/**
 *
 * @author yaser
 */
public class Dictionary {
    private HashMap<String, String> dictionary; 
    
    public Dictionary(){
        dictionary = new HashMap<String, String>();
    }
    
    public String translate(String word){
        if(dictionary.containsKey(word)){
            return dictionary.get(word);
        }
        
        return "Word " + word + " is not in dictionary";
    }
    
    public void add(String word, String translation){
        dictionary.put(word, translation);
    }
    
    public int amountOfWords(){
        return dictionary.size();
    }
    
    public ArrayList<String> translationList(){
      ArrayList<String> translateList = new ArrayList<String>();
      
      for(String k : dictionary.keySet()){
          translateList.add(k + " = " + dictionary.get(k));
      }
      
      return translateList;
    }
    
    
}



import java.util.Scanner;

/**
 *
 * @author yaser
 */
public class TextUserInterface {
  private Scanner reader;
  private Dictionary dictionary;

    public TextUserInterface(Scanner reader, Dictionary dictionary) {
        this.reader = reader;
        this.dictionary = dictionary;
       
           // System.out.println(reader.nextLine());
       
        System.out.println("Statement\n\tquit - quit the text user interface\n\ttranslate - asks a word and prints its translation\n\tadd - adds a word pair to the dictionary");
    }

    public void start() {
        while (true) {
            System.out.println("");
            System.out.print("Statement: ");
            String command = reader.nextLine();

             if (command.equals("quit")){
                System.out.println("Cheers");
                break;
            } else {
                handleCommand(command);
            }
        }
    }

    public void handleCommand(String command) {
       if (command.equals("add")){
          System.out.print("In Finnish: ");
          String word = reader.nextLine();
          System.out.print("Translation: ");
          String translation = reader.nextLine();
          add(word, translation);
        } else if (command.equals("translate")){
           System.out.print("Give a word: ");
           String word = reader.nextLine();
           System.out.println("Translation: " + translate(word));
        }else{
            System.out.println("Uknown statement");
        }
    }
    
    public String translate(String word){
      return  dictionary.translate(word);
    }
    
    public void add(String word, String translation){
        dictionary.add(word, translation);
    }
}



import java.util.ArrayList;
import java.util.HashMap;
import java.util.Scanner;

/**
 *
 * @author yaser
 */
public class Week7 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /*HashMap<String, String> names = new HashMap<String, String>();
        
        names.put("matt", "mage");
        names.put("mikael", "mixu");
        names.put("arto", "arppa");
        
        System.out.println(names.get("mikael"));*/
       
       
        /*PromissoryNote mattisNote = new PromissoryNote();

        mattisNote.setLoan("Arto", 51.5);
        mattisNote.setLoan("Mikael", 30);
        mattisNote.setLoan("Arto", 11.5);

        System.out.println(mattisNote.howMuchIsDebt("Arto"));
        System.out.println(mattisNote.howMuchIsDebt("Joel"));*/

      /* Dictionary dictionary = new Dictionary();
       dictionary.add("apina", "monkey");
       dictionary.add("banaani", "banana");
       dictionary.add("cembalo", "harpsichord");
       
        System.out.println(dictionary.translate("apina"));
        System.out.println(dictionary.translate("porkkana"));
        
        System.out.println(dictionary.amountOfWords());
        
        ArrayList<String> translations = dictionary.translationList();
        
        for(String translation: translations){
            System.out.println(translation);
        }*/
       
       String input = "translate\n" + "monkey\n"  +
                   "translate\n" + "cheese\n" +
                   "add\n"  + "cheese\n" + "juusto\n" +
                   "translate\n" + "cheese\n" +
                   "quit\n";
       
       Scanner reader = new Scanner(input);
       Dictionary dictionary = new Dictionary();
       
       TextUserInterface ui = new TextUserInterface(reader, dictionary);
       ui.start();
       
    }
    
}

